$breakpoints: (
  small: ('max-width: 520px'),
  med-small: ('max-width: 767px'),
  med-large: ('min-width: 768px'),
  large: ('min-width: 1060px')
);

@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (#{map-get($breakpoints, $breakpoint)}) {
      @content;
    }
  } @else {
    @warn 'Unfortunately, no value could be retrieved from `#{$breakpoint}`. '
        + 'Please make sure it is defined in `$breakpoints` map.';
  }
}

//Image manangement
@mixin hidpi-background-image($filename, $background-size: 'mixed', $extension: png) {
  @include retina-image('../images/#{$filename}', $background-size, $extension, $retina-suffix: '@2x');

  @if ($background-size != 'mixed') {
    background-size: $background-size;
  }
}

@mixin flex-container() {
  display: flex;
  margin: 0 auto;
  width: 768px;
}

@mixin clear-fix() {
  &:after {
    clear: both;
    content: '';
    display: table;
  }
}
